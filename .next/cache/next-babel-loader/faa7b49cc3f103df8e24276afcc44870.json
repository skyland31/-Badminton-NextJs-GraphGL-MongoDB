{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"D:\\\\react\\\\next-apollo\\\\pages\\\\_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import App from 'next/app'\nimport PageLayout from \"../components/PageLayout\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  return __jsx(PageLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  })), __jsx(Button, {\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, \"Primary\"), ' ');\n} // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n// MyApp.getInitialProps = async (appContext) => {\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\n//   const appProps = await App.getInitialProps(appContext);\n//\n//   return { ...appProps }\n// }\n\n\nexport default MyApp;","map":{"version":3,"sources":["D:/react/next-apollo/pages/_app.js"],"names":["PageLayout","MyApp","Component","pageProps"],"mappings":";;;;AAAA;AACA,OAAOA,UAAP,MAAuB,0BAAvB;AACA,OAAO,sCAAP;;AAEA,SAASC,KAAT,OAAyC;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;AACrC,SACI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,EAEI,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,EAE+C,GAF/C,CADJ;AAOH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeF,KAAf","sourcesContent":["// import App from 'next/app'\r\nimport PageLayout from \"../components/PageLayout\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction MyApp({ Component, pageProps }) {\r\n    return (\r\n        <PageLayout>\r\n            <Component {...pageProps} />\r\n            <Button variant=\"primary\">Primary</Button>{' '}\r\n        </PageLayout>\r\n    )\r\n\r\n}\r\n\r\n// Only uncomment this method if you have blocking data requirements for\r\n// every single page in your application. This disables the ability to\r\n// perform automatic static optimization, causing every page in your app to\r\n// be server-side rendered.\r\n//\r\n// MyApp.getInitialProps = async (appContext) => {\r\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\r\n//   const appProps = await App.getInitialProps(appContext);\r\n//\r\n//   return { ...appProps }\r\n// }\r\n\r\nexport default MyApp"]},"metadata":{},"sourceType":"module"}