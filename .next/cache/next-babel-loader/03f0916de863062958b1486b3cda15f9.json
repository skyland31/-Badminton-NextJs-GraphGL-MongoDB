{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\next-apollo\\\\pages\\\\Competitions\\\\CreateCompetition\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport apolloClient from '../../../apollo/apolloClient';\nimport Link from 'next/link';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nconst CREATE_COMPETITION = gql`\nmutation CREATE_COMPETITION($name: String!, $detail: String!, $place: String!,$price: String!,$compet_start: String!,$compet_end: String!,$start: String!,$end: String!,$pay_end: String!) {\n  createCompetition(\n    name: $name,\n    detail: $detail,\n    place: $place,\n    price: $price,\n    compet_start: $compet_start,\n    compet_end: $compet_end\n    start: $start,\n    end: $end,\n    pay_end: $pay_end,\n  ){\n        id\n        name\n        detail\n        place\n        price\n        compet_start\n        compet_end\n        start\n        end\n        pay_end\n  }\n}`;\n\nconst Create = () => {\n  const {\n    0: competitionInfo,\n    1: setCompetition\n  } = useState({\n    name: \"\",\n    detail: \"\",\n    place: \"\",\n    price: \"\",\n    compet_start: \"\",\n    compet_end: \"\",\n    start: \"\",\n    end: \"\",\n    pay_end: \"\"\n  });\n  const {\n    0: success,\n    1: setSuccess\n  } = useState(false); // const [competGenInfo, setcompetGenInfo] = useState({\n  //     id: \"\",\n  //     type: \"\",\n  //     gen: \"\",\n  // })\n\n  const [createCompetition, {\n    loading,\n    error,\n    data\n  }] = useMutation(CREATE_COMPETITION, {\n    variables: _objectSpread({}, competitionInfo),\n    onCompleted: data => {\n      if (data) {\n        setSuccess(true);\n        setCompetition({\n          name: \"\",\n          detail: \"\",\n          place: \"\",\n          price: \"\",\n          compet_start: \"\",\n          compet_end: \"\",\n          start: \"\",\n          end: \"\",\n          pay_end: \"\"\n        });\n      }\n    }\n  });\n\n  const handleSubmit = async e => {\n    try {\n      e.preventDefault();\n      await createCompetition();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleChange = e => {\n    setCompetition(_objectSpread({}, competitionInfo, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  console.log(data);\n  return (// <div style={{ margin: 80 }}>\n    //     <form action=\"../CreateGenCompetition\" onSubmit={handleSubmit}>\n    //         <input type=\"text\" name=\"name\" placeholder='Title Competition' onChange={handleChange} /><br /><br />\n    //         <textarea type=\"input\" name=\"detail\" placeholder='รายละเอียด' onChange={handleChange} /><br /><br />\n    //         <input type=\"text\" name=\"start\" placeholder='วันเปิดรับสมัคร' onChange={handleChange} /><br /><br />\n    //         <input type=\"text\" name=\"end\" placeholder='วันสิ้นสุดรับสมัคร ' onChange={handleChange} /><br /><br />\n    //         <input type=\"text\" name=\"compet_start\" placeholder='วันเริ่มการแข่งขัน' onChange={handleChange} /><br /><br />\n    //         <input type=\"text\" name=\"compet_end\" placeholder='วันสิ้นสุดการแข่งขัน' onChange={handleChange} /><br /><br />\n    //         <input type=\"number\" name=\"price\" placeholder='ค่าสมัคร' onChange={handleChange} /><br /><br />\n    //         <input type=\"text\" name=\"pay_end\" placeholder='วันสุดท้ายการจ่ายเงิน' onChange={handleChange} /><br /><br />\n    //         <input type=\"text\" name=\"place\" placeholder='สถานที่' onChange={handleChange} /><br /><br />\n    //         <button type=\"submit\" style={{ margin: '5px', padding: '18px' }} onChange={handleChange} disabled={loading}>สร้างการแข่งขัน Badminton</button>\n    //     </form>\n    //     <div>\n    //         {success && <p>You successfully Create Competitions,please create Gens <Link href=\"../Competitions/CreateCompetition/[createGenCompettionId]\" key={data.createCompetition.id} as={`../Competitions/CreateCompetition/${data.createCompetition.id}`}><a >Competitions.</a></Link></p>}\n    //         {error && <p style={{ color: 'red' }}>{error.graphQLErrors[0].message}</p>}\n    //     </div>\n    // </div >\n    __jsx(\"div\", {\n      style: {\n        margin: 80\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }, __jsx(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Group, {\n      controlId: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, __jsx(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, \"Title\"), __jsx(Form.Control, {\n      type: \"text\",\n      placeholder: \"\\u0E01\\u0E23\\u0E38\\u0E13\\u0E32\\u0E01\\u0E23\\u0E2D\\u0E01\\u0E0A\\u0E37\\u0E48\\u0E2D\\u0E01\\u0E32\\u0E23\\u0E41\\u0E02\\u0E48\\u0E07\\u0E02\\u0E31\\u0E19\\u0E41\\u0E1A\\u0E14\\u0E21\\u0E34\\u0E19\\u0E15\\u0E31\\u0E19\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }), __jsx(Form.Text, {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, \"Your must set Title Competition Badminton.\")), __jsx(Form.Group, {\n      controlId: \"formBasicPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, __jsx(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, \"Password\"), __jsx(Form.Control, {\n      type: \"password\",\n      placeholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    })), __jsx(Form.Group, {\n      controlId: \"formBasicCheckbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, __jsx(Form.Check, {\n      type: \"checkbox\",\n      label: \"Check me out\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    })), __jsx(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, \"Submit\")))\n  );\n};\n\nexport default apolloClient(Create);","map":{"version":3,"sources":["D:/react/next-apollo/pages/Competitions/CreateCompetition/index.js"],"names":["React","useState","useMutation","gql","apolloClient","Link","InputGroup","FormControl","Form","Row","Col","Container","Button","CREATE_COMPETITION","Create","competitionInfo","setCompetition","name","detail","place","price","compet_start","compet_end","start","end","pay_end","success","setSuccess","createCompetition","loading","error","data","variables","onCompleted","handleSubmit","e","preventDefault","console","log","handleChange","target","value","margin"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport gql from 'graphql-tag'\r\nimport apolloClient from '../../../apollo/apolloClient'\r\nimport Link from 'next/link'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Button from 'react-bootstrap/Button'\r\nconst CREATE_COMPETITION = gql`\r\nmutation CREATE_COMPETITION($name: String!, $detail: String!, $place: String!,$price: String!,$compet_start: String!,$compet_end: String!,$start: String!,$end: String!,$pay_end: String!) {\r\n  createCompetition(\r\n    name: $name,\r\n    detail: $detail,\r\n    place: $place,\r\n    price: $price,\r\n    compet_start: $compet_start,\r\n    compet_end: $compet_end\r\n    start: $start,\r\n    end: $end,\r\n    pay_end: $pay_end,\r\n  ){\r\n        id\r\n        name\r\n        detail\r\n        place\r\n        price\r\n        compet_start\r\n        compet_end\r\n        start\r\n        end\r\n        pay_end\r\n  }\r\n}`\r\n\r\n\r\n\r\n\r\nconst Create = () => {\r\n    const [competitionInfo, setCompetition] = useState({\r\n        name: \"\",\r\n        detail: \"\",\r\n        place: \"\",\r\n        price: \"\",\r\n        compet_start: \"\",\r\n        compet_end: \"\",\r\n        start: \"\",\r\n        end: \"\",\r\n        pay_end: \"\",\r\n    })\r\n    const [success, setSuccess] = useState(false);\r\n\r\n\r\n    // const [competGenInfo, setcompetGenInfo] = useState({\r\n    //     id: \"\",\r\n    //     type: \"\",\r\n    //     gen: \"\",\r\n    // })\r\n    const [createCompetition, { loading, error, data }] = useMutation(CREATE_COMPETITION, {\r\n        variables: { ...competitionInfo },\r\n        onCompleted: data => {\r\n            if (data) {\r\n                setSuccess(true)\r\n                setCompetition({\r\n                    name: \"\",\r\n                    detail: \"\",\r\n                    place: \"\",\r\n                    price: \"\",\r\n                    compet_start: \"\",\r\n                    compet_end: \"\",\r\n                    start: \"\",\r\n                    end: \"\",\r\n                    pay_end: \"\",\r\n                })\r\n            }\r\n        }\r\n    })\r\n    const handleSubmit = async e => {\r\n        try {\r\n            e.preventDefault()\r\n            await createCompetition()\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    const handleChange = e => {\r\n        setCompetition({\r\n            ...competitionInfo,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    console.log(data);\r\n\r\n    return (\r\n        // <div style={{ margin: 80 }}>\r\n        //     <form action=\"../CreateGenCompetition\" onSubmit={handleSubmit}>\r\n        //         <input type=\"text\" name=\"name\" placeholder='Title Competition' onChange={handleChange} /><br /><br />\r\n        //         <textarea type=\"input\" name=\"detail\" placeholder='รายละเอียด' onChange={handleChange} /><br /><br />\r\n        //         <input type=\"text\" name=\"start\" placeholder='วันเปิดรับสมัคร' onChange={handleChange} /><br /><br />\r\n        //         <input type=\"text\" name=\"end\" placeholder='วันสิ้นสุดรับสมัคร ' onChange={handleChange} /><br /><br />\r\n        //         <input type=\"text\" name=\"compet_start\" placeholder='วันเริ่มการแข่งขัน' onChange={handleChange} /><br /><br />\r\n        //         <input type=\"text\" name=\"compet_end\" placeholder='วันสิ้นสุดการแข่งขัน' onChange={handleChange} /><br /><br />\r\n        //         <input type=\"number\" name=\"price\" placeholder='ค่าสมัคร' onChange={handleChange} /><br /><br />\r\n        //         <input type=\"text\" name=\"pay_end\" placeholder='วันสุดท้ายการจ่ายเงิน' onChange={handleChange} /><br /><br />\r\n        //         <input type=\"text\" name=\"place\" placeholder='สถานที่' onChange={handleChange} /><br /><br />\r\n        //         <button type=\"submit\" style={{ margin: '5px', padding: '18px' }} onChange={handleChange} disabled={loading}>สร้างการแข่งขัน Badminton</button>\r\n        //     </form>\r\n        //     <div>\r\n        //         {success && <p>You successfully Create Competitions,please create Gens <Link href=\"../Competitions/CreateCompetition/[createGenCompettionId]\" key={data.createCompetition.id} as={`../Competitions/CreateCompetition/${data.createCompetition.id}`}><a >Competitions.</a></Link></p>}\r\n\r\n        //         {error && <p style={{ color: 'red' }}>{error.graphQLErrors[0].message}</p>}\r\n        //     </div>\r\n        // </div >\r\n        <div style={{ margin: 80 }}>\r\n            <Form>\r\n                <Form.Group controlId=\"name\">\r\n                    <Form.Label>Title</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"กรุณากรอกชื่อการแข่งขันแบดมินตัน\" />\r\n                    <Form.Text className=\"text-muted\">\r\n                        Your must set Title Competition Badminton.\r\n                    </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicCheckbox\">\r\n                    <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default apolloClient(Create);\r\n"]},"metadata":{},"sourceType":"module"}