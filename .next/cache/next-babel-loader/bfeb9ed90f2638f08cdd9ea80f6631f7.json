{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\react\\\\next-apollo\\\\pages\\\\Competitions\\\\[competitionId].js\";\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query QUERY_COMPETITION($id: ID!){\\n        competition(id: $id){\\n            id\\n            name\\n            detail\\n            place\\n            price\\n            compet_start\\n            compet_end\\n            start\\n            end\\n            pay_end\\n            gens{\\n                id\\n                type\\n                gen\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport ScrollAnimation from 'react-animate-on-scroll';\nimport Link from 'next/link';\nimport gql from 'graphql-tag';\nimport apolloClient from '../../apollo/apolloClient';\nimport { useQuery } from '@apollo/react-hooks';\nvar QUERY_COMPETITION = gql(_templateObject());\n\nvar Competition = function Competition() {\n  var route = useRouter();\n  var result = useQuery(QUERY_COMPETITION, {\n    variables: {\n      id: route.query.competitionId\n    }\n  });\n  console.log(result);\n  return (// <div>\n    //     {route.query.competitionId}\n    // </div>\n    __jsx(Container, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, __jsx(ScrollAnimation, {\n      animateIn: \"jackInTheBox\",\n      animateOut: \"fadeOut\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, __jsx(Card, {\n      className: \"text-center\",\n      style: {\n        margin: 80\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, __jsx(Card.Header, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, route.query.competitionId), __jsx(Card.Body, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, __jsx(Card.Title, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }, \"Special title treatment\"), __jsx(Card.Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, \"With supporting text below as a natural lead-in to additional content.\"), __jsx(Link, {\n      href: \"/Competitions\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }, __jsx(\"a\", {\n      style: Detail,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }\n    }, \"\\u0E01\\u0E25\\u0E31\\u0E1A\"))), __jsx(Card.Footer, {\n      className: \"text-muted\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, \"2 days ago\"))))\n  );\n};\n\nvar Detail = {\n  fontSize: 15\n};\nexport default apolloClient(Competition);","map":{"version":3,"sources":["D:/react/next-apollo/pages/Competitions/[competitionId].js"],"names":["React","useRouter","Container","Row","Col","Card","ScrollAnimation","Link","gql","apolloClient","useQuery","QUERY_COMPETITION","Competition","route","result","variables","id","query","competitionId","console","log","margin","Detail","fontSize"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,IAAMC,iBAAiB,GAAGH,GAAH,mBAAvB;;AAsBA,IAAMI,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtB,MAAMC,KAAK,GAAGZ,SAAS,EAAvB;AACA,MAAMa,MAAM,GAAGJ,QAAQ,CAACC,iBAAD,EAAoB;AACvCI,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAAEH,KAAK,CAACI,KAAN,CAAYC;AAAlB;AAD4B,GAApB,CAAvB;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AAEA,SACI;AACA;AACA;AACA,UAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,eAAD;AAAiB,MAAA,SAAS,EAAC,cAA3B;AACI,MAAA,UAAU,EAAC,SADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,MAAC,IAAD;AAAM,MAAA,SAAS,EAAC,aAAhB;AAA8B,MAAA,KAAK,EAAE;AAAEO,QAAAA,MAAM,EAAE;AAAV,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAcR,KAAK,CAACI,KAAN,CAAYC,aAA1B,CADJ,EAEI,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,EAEI,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gFAFJ,EAKI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,KAAK,EAAEI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,CALJ,CAFJ,EAWI,MAAC,IAAD,CAAM,MAAN;AAAa,MAAA,SAAS,EAAC,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXJ,CAFJ,CADJ;AAJJ;AAuBH,CA9BD;;AAgCA,IAAMA,MAAM,GAAG;AACXC,EAAAA,QAAQ,EAAE;AADC,CAAf;AAIA,eAAed,YAAY,CAACG,WAAD,CAA3B","sourcesContent":["import React from 'react'\r\nimport { useRouter } from 'next/router'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Card from 'react-bootstrap/Card'\r\nimport ScrollAnimation from 'react-animate-on-scroll';\r\nimport Link from 'next/link'\r\nimport gql from 'graphql-tag'\r\nimport apolloClient from '../../apollo/apolloClient'\r\nimport { useQuery } from '@apollo/react-hooks'\r\n\r\nconst QUERY_COMPETITION = gql`\r\n    query QUERY_COMPETITION($id: ID!){\r\n        competition(id: $id){\r\n            id\r\n            name\r\n            detail\r\n            place\r\n            price\r\n            compet_start\r\n            compet_end\r\n            start\r\n            end\r\n            pay_end\r\n            gens{\r\n                id\r\n                type\r\n                gen\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst Competition = () => {\r\n    const route = useRouter();\r\n    const result = useQuery(QUERY_COMPETITION, {\r\n        variables: { id: route.query.competitionId }\r\n    })\r\n    console.log(result);\r\n\r\n    return (\r\n        // <div>\r\n        //     {route.query.competitionId}\r\n        // </div>\r\n        <Container>\r\n            <ScrollAnimation animateIn='jackInTheBox'\r\n                animateOut='fadeOut'>\r\n                <Card className=\"text-center\" style={{ margin: 80 }}>\r\n                    <Card.Header>{route.query.competitionId}</Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Title>Special title treatment</Card.Title>\r\n                        <Card.Text>\r\n                            With supporting text below as a natural lead-in to additional content.\r\n                    </Card.Text>\r\n                        <Link href='/Competitions'>\r\n                            <a style={Detail}>กลับ</a>\r\n                        </Link>\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-muted\">2 days ago</Card.Footer>\r\n                </Card>\r\n            </ScrollAnimation>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Detail = {\r\n    fontSize: 15\r\n}\r\n\r\nexport default apolloClient(Competition)\r\n"]},"metadata":{},"sourceType":"module"}