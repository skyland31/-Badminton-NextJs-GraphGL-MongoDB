{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\next-apollo\\\\pages\\\\Competitions\\\\CreateCompetition\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport apolloClient from '../../../apollo/apolloClient';\nimport Link from 'next/link';\nconst CREATE_COMPETITION = gql`\nmutation CREATE_COMPETITION($name: String!, $detail: String!, $place: String!,$price: String!,$compet_start: String!,$compet_end: String!,$start: String!,$end: String!,$pay_end: String!) {\n  createCompetition(\n    name: $name,\n    detail: $detail,\n    place: $place,\n    price: $price,\n    compet_start: $compet_start,\n    compet_end: $compet_end\n    start: $start,\n    end: $end,\n    pay_end: $pay_end,\n  ){\n        id\n        name\n        detail\n        place\n        price\n        compet_start\n        compet_end\n        start\n        end\n        pay_end\n  }\n}`;\n\nconst Create = () => {\n  const {\n    0: competitionInfo,\n    1: setCompetition\n  } = useState({\n    name: \"\",\n    detail: \"\",\n    place: \"\",\n    price: \"\",\n    compet_start: \"\",\n    compet_end: \"\",\n    start: \"\",\n    end: \"\",\n    pay_end: \"\"\n  });\n  const {\n    0: success,\n    1: setSuccess\n  } = useState(false); // const [competGenInfo, setcompetGenInfo] = useState({\n  //     id: \"\",\n  //     type: \"\",\n  //     gen: \"\",\n  // })\n\n  const [createCompetition, {\n    loading,\n    error,\n    data\n  }] = useMutation(CREATE_COMPETITION, {\n    variables: _objectSpread({}, competitionInfo),\n    onCompleted: data => {\n      if (data) {\n        setSuccess(true);\n        setCompetition({\n          name: \"\",\n          detail: \"\",\n          place: \"\",\n          price: \"\",\n          compet_start: \"\",\n          compet_end: \"\",\n          start: \"\",\n          end: \"\",\n          pay_end: \"\"\n        });\n      }\n    }\n  });\n\n  const handleSubmit = async e => {\n    try {\n      e.preventDefault();\n      await createCompetition();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleChange = e => {\n    setCompetition(_objectSpread({}, competitionInfo, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      margin: 80\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, __jsx(\"form\", {\n    action: \"../CreateGenCompetition\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"Title Competition\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 106\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 112\n    }\n  }), __jsx(\"textarea\", {\n    type: \"input\",\n    name: \"detail\",\n    placeholder: \"\\u0E23\\u0E32\\u0E22\\u0E25\\u0E30\\u0E40\\u0E2D\\u0E35\\u0E22\\u0E14\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 105\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 111\n    }\n  }), __jsx(\"input\", {\n    type: \"text\",\n    name: \"start\",\n    placeholder: \"\\u0E27\\u0E31\\u0E19\\u0E40\\u0E1B\\u0E34\\u0E14\\u0E23\\u0E31\\u0E1A\\u0E2A\\u0E21\\u0E31\\u0E04\\u0E23\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 105\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 111\n    }\n  }), __jsx(\"input\", {\n    type: \"text\",\n    name: \"end\",\n    placeholder: \"\\u0E27\\u0E31\\u0E19\\u0E2A\\u0E34\\u0E49\\u0E19\\u0E2A\\u0E38\\u0E14\\u0E23\\u0E31\\u0E1A\\u0E2A\\u0E21\\u0E31\\u0E04\\u0E23 \",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 107\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 113\n    }\n  }), __jsx(\"input\", {\n    type: \"text\",\n    name: \"compet_start\",\n    placeholder: \"\\u0E27\\u0E31\\u0E19\\u0E40\\u0E23\\u0E34\\u0E48\\u0E21\\u0E01\\u0E32\\u0E23\\u0E41\\u0E02\\u0E48\\u0E07\\u0E02\\u0E31\\u0E19\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 115\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 121\n    }\n  }), __jsx(\"input\", {\n    type: \"text\",\n    name: \"compet_end\",\n    placeholder: \"\\u0E27\\u0E31\\u0E19\\u0E2A\\u0E34\\u0E49\\u0E19\\u0E2A\\u0E38\\u0E14\\u0E01\\u0E32\\u0E23\\u0E41\\u0E02\\u0E48\\u0E07\\u0E02\\u0E31\\u0E19\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 115\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 121\n    }\n  }), __jsx(\"input\", {\n    type: \"number\",\n    name: \"price\",\n    placeholder: \"\\u0E04\\u0E48\\u0E32\\u0E2A\\u0E21\\u0E31\\u0E04\\u0E23\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 100\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 106\n    }\n  }), __jsx(\"input\", {\n    type: \"text\",\n    name: \"pay_end\",\n    placeholder: \"\\u0E27\\u0E31\\u0E19\\u0E2A\\u0E38\\u0E14\\u0E17\\u0E49\\u0E32\\u0E22\\u0E01\\u0E32\\u0E23\\u0E08\\u0E48\\u0E32\\u0E22\\u0E40\\u0E07\\u0E34\\u0E19\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 113\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 119\n    }\n  }), __jsx(\"input\", {\n    type: \"text\",\n    name: \"place\",\n    placeholder: \"\\u0E2A\\u0E16\\u0E32\\u0E19\\u0E17\\u0E35\\u0E48\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 97\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 103\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    style: {\n      margin: '5px',\n      padding: '18px'\n    },\n    onChange: handleChange,\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, \"\\u0E2A\\u0E23\\u0E49\\u0E32\\u0E07\\u0E01\\u0E32\\u0E23\\u0E41\\u0E02\\u0E48\\u0E07\\u0E02\\u0E31\\u0E19 Badminton\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, success && __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  }, \"You successfully Create Competitions,please create Gens \", __jsx(Link, {\n    key: data.createCompetition.id,\n    href: \"../[createGenCompettionId]\",\n    as: `/${prod.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 88\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 179\n    }\n  }, \"Competitions.\"))), error && __jsx(\"p\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 27\n    }\n  }, error.graphQLErrors[0].message)));\n};\n\nexport default apolloClient(Create);","map":{"version":3,"sources":["D:/react/next-apollo/pages/Competitions/CreateCompetition/index.js"],"names":["React","useState","useMutation","gql","apolloClient","Link","CREATE_COMPETITION","Create","competitionInfo","setCompetition","name","detail","place","price","compet_start","compet_end","start","end","pay_end","success","setSuccess","createCompetition","loading","error","data","variables","onCompleted","handleSubmit","e","preventDefault","console","log","handleChange","target","value","margin","padding","id","prod","color","graphQLErrors","message"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport gql from 'graphql-tag'\r\nimport apolloClient from '../../../apollo/apolloClient'\r\nimport Link from 'next/link'\r\nconst CREATE_COMPETITION = gql`\r\nmutation CREATE_COMPETITION($name: String!, $detail: String!, $place: String!,$price: String!,$compet_start: String!,$compet_end: String!,$start: String!,$end: String!,$pay_end: String!) {\r\n  createCompetition(\r\n    name: $name,\r\n    detail: $detail,\r\n    place: $place,\r\n    price: $price,\r\n    compet_start: $compet_start,\r\n    compet_end: $compet_end\r\n    start: $start,\r\n    end: $end,\r\n    pay_end: $pay_end,\r\n  ){\r\n        id\r\n        name\r\n        detail\r\n        place\r\n        price\r\n        compet_start\r\n        compet_end\r\n        start\r\n        end\r\n        pay_end\r\n  }\r\n}`\r\n\r\n\r\n\r\n\r\nconst Create = () => {\r\n    const [competitionInfo, setCompetition] = useState({\r\n        name: \"\",\r\n        detail: \"\",\r\n        place: \"\",\r\n        price: \"\",\r\n        compet_start: \"\",\r\n        compet_end: \"\",\r\n        start: \"\",\r\n        end: \"\",\r\n        pay_end: \"\",\r\n    })\r\n    const [success, setSuccess] = useState(false);\r\n\r\n\r\n    // const [competGenInfo, setcompetGenInfo] = useState({\r\n    //     id: \"\",\r\n    //     type: \"\",\r\n    //     gen: \"\",\r\n    // })\r\n    const [createCompetition, { loading, error, data }] = useMutation(CREATE_COMPETITION, {\r\n        variables: { ...competitionInfo },\r\n        onCompleted: data => {\r\n            if (data) {\r\n                setSuccess(true)\r\n                setCompetition({\r\n                    name: \"\",\r\n                    detail: \"\",\r\n                    place: \"\",\r\n                    price: \"\",\r\n                    compet_start: \"\",\r\n                    compet_end: \"\",\r\n                    start: \"\",\r\n                    end: \"\",\r\n                    pay_end: \"\",\r\n                })\r\n            }\r\n        }\r\n    })\r\n    const handleSubmit = async e => {\r\n        try {\r\n            e.preventDefault()\r\n            await createCompetition()\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    const handleChange = e => {\r\n        setCompetition({\r\n            ...competitionInfo,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    return (\r\n        <div style={{ margin: 80 }}>\r\n            <form action=\"../CreateGenCompetition\" onSubmit={handleSubmit}>\r\n                <input type=\"text\" name=\"name\" placeholder='Title Competition' onChange={handleChange} /><br /><br />\r\n                <textarea type=\"input\" name=\"detail\" placeholder='รายละเอียด' onChange={handleChange} /><br /><br />\r\n                <input type=\"text\" name=\"start\" placeholder='วันเปิดรับสมัคร' onChange={handleChange} /><br /><br />\r\n                <input type=\"text\" name=\"end\" placeholder='วันสิ้นสุดรับสมัคร ' onChange={handleChange} /><br /><br />\r\n                <input type=\"text\" name=\"compet_start\" placeholder='วันเริ่มการแข่งขัน' onChange={handleChange} /><br /><br />\r\n                <input type=\"text\" name=\"compet_end\" placeholder='วันสิ้นสุดการแข่งขัน' onChange={handleChange} /><br /><br />\r\n                <input type=\"number\" name=\"price\" placeholder='ค่าสมัคร' onChange={handleChange} /><br /><br />\r\n                <input type=\"text\" name=\"pay_end\" placeholder='วันสุดท้ายการจ่ายเงิน' onChange={handleChange} /><br /><br />\r\n                <input type=\"text\" name=\"place\" placeholder='สถานที่' onChange={handleChange} /><br /><br />\r\n                <button type=\"submit\" style={{ margin: '5px', padding: '18px' }} onChange={handleChange} disabled={loading}>สร้างการแข่งขัน Badminton</button>\r\n            </form>\r\n            <div>\r\n                {success && <p>You successfully Create Competitions,please create Gens <Link key={data.createCompetition.id} href=\"../[createGenCompettionId]\" as={`/${prod.id}`}><a >Competitions.</a></Link></p>}\r\n\r\n                {error && <p style={{ color: 'red' }}>{error.graphQLErrors[0].message}</p>}\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default apolloClient(Create);\r\n"]},"metadata":{},"sourceType":"module"}