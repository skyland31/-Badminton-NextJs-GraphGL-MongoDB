{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"D:\\\\react\\\\next-apollo\\\\pages\\\\Competitions\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"animation: 2s \", \" infinite\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query{\\n        competitions{\\n            id\\n            name\\n            detail\\n            place\\n            price\\n            compet_start\\n            compet_end\\n            start\\n            end\\n            pay_end\\n            gens{\\n                id\\n                gen\\n                type\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport Link from 'next/link';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport ScrollAnimation from 'react-animate-on-scroll';\nimport { bounce } from 'react-animations';\nimport styled, { keyframes } from 'styled-components';\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from 'graphql-tag';\nimport apolloClient from '../../apollo/apolloClient';\nvar QUERY_COMPETITIONS = gql(_templateObject());\n\nvar img = require(\"../back.jpg\");\n\nfunction Competition() {\n  var _this = this;\n\n  var _useQuery = useQuery(QUERY_COMPETITIONS, {\n    pollInterval: 10000\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error; /// pollInterval : 10000 ให้ รีเฟรส ทุกๆ 10 วิ\n\n\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 23\n    }\n  }, \"Ooobs...somthing went wrong,please try again later.\");\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, \"loading\");\n  console.log(data);\n  var date = new Date(); // const result = useQuery(QUERY_COMPETITIONS,{id :'aa'}) กรณีที่ต้องใส่ args\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"team\",\n    style: {\n      padding: 80\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, __jsx(Container, {\n    fluid: true,\n    style: {\n      padding: 80\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, __jsx(ScrollAnimation, {\n    animateIn: \"fadeIn\",\n    animateOut: \"fadeOut\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  }, __jsx(Row, {\n    className: \"justify-content-md-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 33\n    }\n  }, __jsx(Col, {\n    md: 6,\n    sm: 6,\n    lg: 6,\n    style: Title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 37\n    }\n  }, __jsx(Bounce, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 78\n    }\n  }, \"Badminton\")), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 37\n    }\n  })), __jsx(Row, {\n    className: \"justify-content-md-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 33\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 37\n    }\n  }, \" \"), __jsx(Col, {\n    md: 8,\n    sm: 8,\n    lg: 8,\n    style: Title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 37\n    }\n  }, __jsx(\"a\", {\n    style: {\n      backgroundColor: \"white\",\n      color: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 77\n    }\n  }, \"Com\"), __jsx(\"a\", {\n    style: {\n      backgroundColor: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 140\n    }\n  }, \"petitions\")))))))), __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, data.competitions.map(function (prod) {\n    return __jsx(ScrollAnimation, {\n      animateIn: \"flipInY\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, __jsx(Card, {\n      style: card,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, __jsx(Card.Header, {\n      style: {\n        fontSize: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }\n    }, \"\\u0E0A\\u0E37\\u0E48\\u0E2D\\u0E01\\u0E32\\u0E23\\u0E41\\u0E02\\u0E48\\u0E07\\u0E02\\u0E31\\u0E19 \", prod.name), __jsx(Card.Body, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }\n    }, __jsx(Card.Title, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 33\n      }\n    }, \"\\u0E2A\\u0E16\\u0E32\\u0E19\\u0E17\\u0E35\\u0E48\\u0E08\\u0E31\\u0E14\\u0E41\\u0E02\\u0E48\\u0E07\\u0E04\\u0E37\\u0E2D \", prod.place), __jsx(Card.Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 33\n      }\n    }, \"\\u0E27\\u0E31\\u0E19\\u0E40\\u0E1B\\u0E34\\u0E14\\u0E23\\u0E31\\u0E1A\\u0E2A\\u0E21\\u0E31\\u0E04\\u0E23 : \", date.toISOString(prod.start).split(\"T\")[0], \" \\u0E27\\u0E31\\u0E19\\u0E2A\\u0E34\\u0E49\\u0E19\\u0E2A\\u0E38\\u0E14\\u0E23\\u0E31\\u0E1A\\u0E2A\\u0E21\\u0E31\\u0E04\\u0E23 : \", date.toISOString(prod.end).split(\"T\")[0]), __jsx(Link, {\n      key: prod.id,\n      href: \"/Competitions/[competitionId]\",\n      as: \"/Competitions/\".concat(prod.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 33\n      }\n    }, __jsx(\"a\", {\n      style: Detail,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 37\n      }\n    }, \" \\u0E23\\u0E32\\u0E22\\u0E25\\u0E30\\u0E40\\u0E2D\\u0E35\\u0E22\\u0E14 \\u0E40\\u0E1E\\u0E34\\u0E48\\u0E21\\u0E40\\u0E15\\u0E34\\u0E21...\")))));\n  })), __jsx(\"style\", {\n    JSX: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"\\n                .team {\\n                background: url('\" + img + \"');\\n                height: 100%;\\n                background-position: center;\\n                background-repeat: no-repeat;\\n                background-size: cover;\\n                }\\n                \"));\n} // const divstyle = {\n//     display: 'grid',\n//     justifyContent: 'center'\n// }np\n\n\nvar Bounce = styled.div(_templateObject2(), keyframes(_templateObject3(), bounce));\nvar card = {\n  border: \"outset\",\n  padding: 10,\n  margin: 30\n};\nvar Title = {\n  fontSize: 120,\n  color: \"white\"\n};\nvar Detail = {\n  fontSize: 15\n};\nexport default apolloClient(Competition);","map":{"version":3,"sources":["D:/react/next-apollo/pages/Competitions/index.js"],"names":["React","Link","Container","Row","Col","Card","ScrollAnimation","bounce","styled","keyframes","useQuery","gql","apolloClient","QUERY_COMPETITIONS","img","require","Competition","pollInterval","data","loading","error","console","log","date","Date","padding","Title","backgroundColor","color","competitions","map","prod","card","fontSize","name","place","toISOString","start","split","end","id","Detail","Bounce","div","border","margin"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Link from 'next/link'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Card from 'react-bootstrap/Card'\r\nimport ScrollAnimation from 'react-animate-on-scroll';\r\nimport { bounce } from 'react-animations';\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { useQuery } from \"@apollo/react-hooks\"\r\nimport gql from 'graphql-tag'\r\nimport apolloClient from '../../apollo/apolloClient'\r\n\r\n\r\nconst QUERY_COMPETITIONS = gql`\r\n    query{\r\n        competitions{\r\n            id\r\n            name\r\n            detail\r\n            place\r\n            price\r\n            compet_start\r\n            compet_end\r\n            start\r\n            end\r\n            pay_end\r\n            gens{\r\n                id\r\n                gen\r\n                type\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst img = require(\"../back.jpg\");\r\nfunction Competition() {\r\n    const { data, loading, error } = useQuery(QUERY_COMPETITIONS, { pollInterval: 10000 })\r\n    /// pollInterval : 10000 ให้ รีเฟรส ทุกๆ 10 วิ\r\n\r\n    if (error) return <p>Ooobs...somthing went wrong,please try again later.</p>\r\n\r\n    if (loading) return <p>loading</p>\r\n\r\n    console.log(data);\r\n\r\n    const date = new Date();\r\n    // const result = useQuery(QUERY_COMPETITIONS,{id :'aa'}) กรณีที่ต้องใส่ args\r\n    return (\r\n        <div>\r\n            <div className=\"team\" style={{ padding: 80 }}>\r\n                <Container fluid style={{ padding: 80 }}>\r\n                    <Container >\r\n                        <Row >\r\n                            <ScrollAnimation animateIn='fadeIn'\r\n                                animateOut='fadeOut'>\r\n                                <Row className=\"justify-content-md-center\" >\r\n                                    <Col md={6} sm={6} lg={6} style={Title} ><Bounce>Badminton</Bounce></Col>\r\n                                    <Col></Col>\r\n                                </Row>\r\n                                <Row className=\"justify-content-md-center\" >\r\n                                    <Col> </Col>\r\n                                    <Col md={8} sm={8} lg={8} style={Title}><a style={{ backgroundColor: \"white\", color: \"black\" }}>Com</a><a style={{ backgroundColor: \"black\" }}>petitions</a></Col>\r\n                                </Row>\r\n\r\n                            </ScrollAnimation>\r\n                        </Row>\r\n                    </Container>\r\n                </Container>\r\n            </div>\r\n            <Container >\r\n\r\n                {data.competitions.map(prod => (\r\n                    <ScrollAnimation animateIn='flipInY'>\r\n                        <Card style={card}>\r\n                            <Card.Header style={{ fontSize: 20 }}>ชื่อการแข่งขัน {prod.name}</Card.Header>\r\n                            <Card.Body>\r\n                                <Card.Title>สถานที่จัดแข่งคือ {prod.place}</Card.Title>\r\n                                <Card.Text>\r\n                                    วันเปิดรับสมัคร : {date.toISOString(prod.start).split(\"T\")[0]} วันสิ้นสุดรับสมัคร : {date.toISOString(prod.end).split(\"T\")[0]}\r\n                                </Card.Text>\r\n                                <Link key={prod.id} href='/Competitions/[competitionId]' as={`/Competitions/${prod.id}`} >\r\n                                    <a style={Detail}> รายละเอียด เพิ่มเติม...</a>\r\n                                </Link>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </ScrollAnimation>\r\n\r\n                ))}\r\n            </Container>\r\n            <style JSX>{`\r\n                .team {\r\n                background: url('`+ img + `');\r\n                height: 100%;\r\n                background-position: center;\r\n                background-repeat: no-repeat;\r\n                background-size: cover;\r\n                }\r\n                `}\r\n            </style>\r\n        </div >\r\n\r\n\r\n    )\r\n}\r\n\r\n// const divstyle = {\r\n//     display: 'grid',\r\n//     justifyContent: 'center'\r\n// }np\r\nconst Bounce = styled.div`animation: 2s ${keyframes`${bounce}`} infinite`;\r\n\r\nconst card = {\r\n    border: \"outset\",\r\n    padding: 10,\r\n    margin: 30,\r\n}\r\n\r\nconst Title = {\r\n    fontSize: 120,\r\n    color: \"white\"\r\n}\r\n\r\n\r\nconst Detail = {\r\n    fontSize: 15\r\n}\r\n\r\nexport default apolloClient(Competition);"]},"metadata":{},"sourceType":"module"}