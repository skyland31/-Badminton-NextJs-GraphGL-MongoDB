{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\next-apollo\\\\pages\\\\_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n// import App from 'next/app'\nimport PageLayout from \"../components/PageLayout\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"animate.css/animate.min.css\"; //import { ApolloProvider } from '@apollo/react-hooks'\n// import apolloClient from '../apollo/apolloClient'\n\n/*-----------------SSR all pages----------------------\r\nfunction MyApp({ Component, pageProps, apollo }) {\r\n    return (\r\n        <ApolloProvider client={apollo}>\r\n            <PageLayout>\r\n                <Component {...pageProps} />\r\n            </PageLayout>\r\n        </ApolloProvider>\r\n    )\r\n\r\n}\r\n-----------------------------------------------------*/\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  return __jsx(PageLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  })));\n} // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n// MyApp.getInitialProps = async (appContext) => {\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\n//   const appProps = await App.getInitialProps(appContext);\n//\n//   return { ...appProps }\n// }\n\n\nexport default MyApp;","map":{"version":3,"sources":["D:/react/next-apollo/pages/_app.js"],"names":["PageLayout","MyApp","Component","pageProps"],"mappings":";;;;;;AAAA;AACA,OAAOA,UAAP,MAAuB,0BAAvB;AACA,OAAO,sCAAP;AACA,OAAO,6BAAP,C,CACA;AACA;;AACA;;;;;;;;;;;;;AAYA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AACrC,SACI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,CADJ;AAMH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeF,KAAf","sourcesContent":["// import App from 'next/app'\r\nimport PageLayout from \"../components/PageLayout\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"animate.css/animate.min.css\";\r\n//import { ApolloProvider } from '@apollo/react-hooks'\r\n// import apolloClient from '../apollo/apolloClient'\r\n/*-----------------SSR all pages----------------------\r\nfunction MyApp({ Component, pageProps, apollo }) {\r\n    return (\r\n        <ApolloProvider client={apollo}>\r\n            <PageLayout>\r\n                <Component {...pageProps} />\r\n            </PageLayout>\r\n        </ApolloProvider>\r\n    )\r\n\r\n}\r\n-----------------------------------------------------*/\r\nfunction MyApp({ Component, pageProps }) {\r\n    return (\r\n        <PageLayout>\r\n            <Component {...pageProps} />\r\n        </PageLayout>\r\n    )\r\n\r\n}\r\n\r\n// Only uncomment this method if you have blocking data requirements for\r\n// every single page in your application. This disables the ability to\r\n// perform automatic static optimization, causing every page in your app to\r\n// be server-side rendered.\r\n//\r\n// MyApp.getInitialProps = async (appContext) => {\r\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\r\n//   const appProps = await App.getInitialProps(appContext);\r\n//\r\n//   return { ...appProps }\r\n// }\r\n\r\nexport default MyApp"]},"metadata":{},"sourceType":"module"}