{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\next-apollo\\\\pages\\\\Competitions\\\\[competitionId].js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport ScrollAnimation from 'react-animate-on-scroll';\nimport Link from 'next/link';\nimport gql from 'graphql-tag';\nimport apolloClient from '../../apollo/apolloClient';\nimport { useQuery } from '@apollo/react-hooks';\nconst QUERY_COMPETITION = gql`\n    query QUERY_COMPETITION($id: ID!){\n        competition(id: $id){\n            id\n            name\n            detail\n            place\n            price\n            compet_start\n            compet_end\n            start\n            end\n            pay_end\n            gens{\n            id\n            type\n            gen\n            }\n        }\n    }\n`;\n\nconst Competition = () => {\n  const route = useRouter();\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(QUERY_COMPETITION, {\n    variables: {\n      id: route.query.competitionId\n    }\n  });\n  if (error) return __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 23\n    }\n  }, \"Somethings went wrong,please try agein.\");\n  if (loading) return __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, \"loading....\");\n  return (// <div>\n    //     {route.query.competitionId}\n    // </div>\n    __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, __jsx(ScrollAnimation, {\n      animateIn: \"jackInTheBox\",\n      animateOut: \"fadeOut\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, __jsx(Card, {\n      className: \"text-center\",\n      style: {\n        margin: 80\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, __jsx(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, \"\\u0E01\\u0E32\\u0E23\\u0E41\\u0E02\\u0E48\\u0E07\\u0E02\\u0E31\\u0E19 Badminton\"), __jsx(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, __jsx(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, data.competition.name), __jsx(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }, data.competition.detail, \"\\u0E27\\u0E31\\u0E19\\u0E40\\u0E1B\\u0E34\\u0E14\\u0E23\\u0E31\\u0E1A\\u0E2A\\u0E21\\u0E31\\u0E04\\u0E23 : \", date.toISOString(prod.start).split(\"T\")[0], \" \\u0E27\\u0E31\\u0E19\\u0E2A\\u0E34\\u0E49\\u0E19\\u0E2A\\u0E38\\u0E14\\u0E23\\u0E31\\u0E1A\\u0E2A\\u0E21\\u0E31\\u0E04\\u0E23 : \", date.toISOString(prod.end).split(\"T\")[0]), __jsx(Link, {\n      href: \"/Competitions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    }, __jsx(\"a\", {\n      style: Detail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 29\n      }\n    }, \"\\u0E01\\u0E25\\u0E31\\u0E1A\"))), __jsx(Card.Footer, {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, \"2 days ago\"))))\n  );\n};\n\nconst Detail = {\n  fontSize: 15\n};\nexport default apolloClient(Competition);","map":{"version":3,"sources":["D:/react/next-apollo/pages/Competitions/[competitionId].js"],"names":["React","useRouter","Container","Row","Col","Card","ScrollAnimation","Link","gql","apolloClient","useQuery","QUERY_COMPETITION","Competition","route","data","loading","error","variables","id","query","competitionId","margin","competition","name","detail","date","toISOString","prod","start","split","end","Detail","fontSize"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,MAAMC,iBAAiB,GAAGH,GAAI;;;;;;;;;;;;;;;;;;;;CAA9B;;AAsBA,MAAMI,WAAW,GAAG,MAAM;AACtB,QAAMC,KAAK,GAAGZ,SAAS,EAAvB;AACA,QAAM;AAAEa,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BN,QAAQ,CAACC,iBAAD,EAAoB;AACzDM,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAAEL,KAAK,CAACM,KAAN,CAAYC;AAAlB;AAD8C,GAApB,CAAzC;AAIA,MAAIJ,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAAP;AACX,MAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AAEb,SACI;AACA;AACA;AACA,UAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,eAAD;AAAiB,MAAA,SAAS,EAAC,cAA3B;AACI,MAAA,UAAU,EAAC,SADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,MAAC,IAAD;AAAM,MAAA,SAAS,EAAC,aAAhB;AAA8B,MAAA,KAAK,EAAE;AAAEM,QAAAA,MAAM,EAAE;AAAV,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gFADJ,EAEI,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAaP,IAAI,CAACQ,WAAL,CAAiBC,IAA9B,CADJ,EAEI,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKT,IAAI,CAACQ,WAAL,CAAiBE,MADtB,mGAEuBC,IAAI,CAACC,WAAL,CAAiBC,IAAI,CAACC,KAAtB,EAA6BC,KAA7B,CAAmC,GAAnC,EAAwC,CAAxC,CAFvB,sHAEyFJ,IAAI,CAACC,WAAL,CAAiBC,IAAI,CAACG,GAAtB,EAA2BD,KAA3B,CAAiC,GAAjC,EAAsC,CAAtC,CAFzF,CAFJ,EAMI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,KAAK,EAAEE,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,CANJ,CAFJ,EAYI,MAAC,IAAD,CAAM,MAAN;AAAa,MAAA,SAAS,EAAC,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZJ,CAFJ,CADJ;AAJJ;AAwBH,CAjCD;;AAmCA,MAAMA,MAAM,GAAG;AACXC,EAAAA,QAAQ,EAAE;AADC,CAAf;AAIA,eAAevB,YAAY,CAACG,WAAD,CAA3B","sourcesContent":["import React from 'react'\r\nimport { useRouter } from 'next/router'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Card from 'react-bootstrap/Card'\r\nimport ScrollAnimation from 'react-animate-on-scroll';\r\nimport Link from 'next/link'\r\nimport gql from 'graphql-tag'\r\nimport apolloClient from '../../apollo/apolloClient'\r\nimport { useQuery } from '@apollo/react-hooks'\r\n\r\nconst QUERY_COMPETITION = gql`\r\n    query QUERY_COMPETITION($id: ID!){\r\n        competition(id: $id){\r\n            id\r\n            name\r\n            detail\r\n            place\r\n            price\r\n            compet_start\r\n            compet_end\r\n            start\r\n            end\r\n            pay_end\r\n            gens{\r\n            id\r\n            type\r\n            gen\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst Competition = () => {\r\n    const route = useRouter();\r\n    const { data, loading, error } = useQuery(QUERY_COMPETITION, {\r\n        variables: { id: route.query.competitionId }\r\n    })\r\n\r\n    if (error) return <a>Somethings went wrong,please try agein.</a>\r\n    if (loading) return <a>loading....</a>\r\n\r\n    return (\r\n        // <div>\r\n        //     {route.query.competitionId}\r\n        // </div>\r\n        <Container>\r\n            <ScrollAnimation animateIn='jackInTheBox'\r\n                animateOut='fadeOut'>\r\n                <Card className=\"text-center\" style={{ margin: 80 }}>\r\n                    <Card.Header>การแข่งขัน Badminton</Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Title>{data.competition.name}</Card.Title>\r\n                        <Card.Text>\r\n                            {data.competition.detail}\r\n                            วันเปิดรับสมัคร : {date.toISOString(prod.start).split(\"T\")[0]} วันสิ้นสุดรับสมัคร : {date.toISOString(prod.end).split(\"T\")[0]}\r\n                        </Card.Text>\r\n                        <Link href='/Competitions'>\r\n                            <a style={Detail}>กลับ</a>\r\n                        </Link>\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-muted\">2 days ago</Card.Footer>\r\n                </Card>\r\n            </ScrollAnimation>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Detail = {\r\n    fontSize: 15\r\n}\r\n\r\nexport default apolloClient(Competition)\r\n"]},"metadata":{},"sourceType":"module"}